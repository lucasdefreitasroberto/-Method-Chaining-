unit implementa;

interface

uses
  interfaces, System.SysUtils, classes;

type
  TDocumento = class(TInterfacedObject, IDocumento)
  private
    FNome: string;
    FIdade: Integer;
    FEndereco: string;
    FPessoa: IPessoa<IDocumento>;
  public
    constructor Create;
    destructor Destroy; override;
    class function New: IDocumento;

    function Documento: IPessoa<IDocumento>;
    function InfoDocumento: string;

    // Métodos para uso interno
    procedure SetPessoa(Nome: string; Idade: Integer; Endereco: string);
  end;

implementation

{ TDocumento }

constructor TDocumento.Create;
begin
   inherited;
end;

destructor TDocumento.Destroy;
begin
  inherited;
end;

function TDocumento.Documento: IPessoa<IDocumento>;
begin

end;

function TDocumento.InfoDocumento: string;
begin
 // Result := Format('Name: %s, Age: %d, Address: %s', [Nome, Idade, Endereco]);
end;

class function TDocumento.New: IDocumento;
begin
  // Retorna uma nova instância de TPessoa, passando 'Self' como Parent
  FPessoa := TPessoa<IDocumento>.New(Self);
  Result := FPessoa;
end;

procedure TDocumento.SetPessoa(Nome: string; Idade: Integer; Endereco: string);
begin

end;

end.

